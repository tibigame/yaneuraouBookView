{"version":3,"sources":["src/types.ts","src/actions.ts","src/form.tsx","src/reducer.ts","src/api.ts","src/sagas.ts","src/index.tsx"],"names":[],"mappings":"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","file":"src.7deaefe9.js","sourceRoot":"..\\..","sourcesContent":["export interface Move {\n  move: string\n  next: string\n  value: number\n  movedSfen?: string\n}\n\n// sfenをキーとして move: sfen[]を値とするmap\nexport interface Book extends ApiResponse {\n  sfen: string\n  moveList: Move[]\n}\nexport interface BookState {\n  readonly data: Book[]\n  readonly loading: boolean\n}\nexport type ApiResponse = Record<string, any>\n\nexport const enum BookActionTypes {\n  FETCH_REQUEST = '@@book/FETCH_REQUEST',\n  FETCH_SUCCESS = '@@book/FETCH_SUCCESS',\n  FETCH_ERROR = '@@book/FETCH_ERROR',\n  REQUEST_SFEN_BOOK = '@@book/REQUEST_SFEN_BOOK',\n  SUCCESS_SFEN_BOOK = '@@book/SUCCESS_SFEN_BOOK',\n  REQUEST_MOVED_SFEN = '@@book/REQUEST_MOVED_SFEN',\n  SUCCESS_MOVED_SFEN = '@@book/SUCCESS_MOVED_SFEN'\n}\n","import { action, createAction } from 'typesafe-actions'\nimport { BookActionTypes, Book } from './types'\n\nexport const fetchRequest = () => action(BookActionTypes.FETCH_REQUEST)\nexport const fetchSuccess = (data: Book[]) => action(BookActionTypes.FETCH_SUCCESS, data)\nexport const fetchError = (message: string) => action(BookActionTypes.FETCH_ERROR, message)\n\n//export const requestSfenBook = (sfen: string) =>\n//  action(BookActionTypes.REQUEST_SFEN_BOOK, { sfen: sfen })\nexport const successSfenBook = (sfen: string) => action(BookActionTypes.SUCCESS_SFEN_BOOK, sfen)\n//export const requestMovedSfen = (data: any) =>\n//  action(BookActionTypes.REQUEST_MOVED_SFEN, { data: data })\nexport const successMovedSfen = (sfen: string) => action(BookActionTypes.SUCCESS_MOVED_SFEN, sfen)\n\nexport const requestSfenBook = createAction(\n  BookActionTypes.REQUEST_SFEN_BOOK,\n  resolve => (sfen: string) => resolve({ sfen: sfen })\n)\nexport const requestMovedSfen = createAction(\n  BookActionTypes.REQUEST_MOVED_SFEN,\n  resolve => (data: any) => resolve({ data: data })\n)\n","﻿import * as React from 'react'\r\nimport { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Dispatch } from 'redux'\r\nimport { BookState, Book } from './types'\r\nimport { requestSfenBook, requestMovedSfen } from './actions'\r\n\r\ninterface PropsFromDispatch {\r\n  requestSfenBook: typeof requestSfenBook\r\n  requestMovedSfen: typeof requestMovedSfen\r\n}\r\n\r\ninterface DataProps {\r\n  data: Book\r\n}\r\n\r\ntype AllProps = PropsFromDispatch & BookState\r\n\r\nconst Form: React.FC<DataProps & PropsFromDispatch> = ({\r\n  data,\r\n  loading,\r\n  requestSfenBook,\r\n  requestMovedSfen\r\n}) => {\r\n  const [text, setText] = useState('')\r\n  if (text.length >= 5) {\r\n    // API呼ぶテスト\r\n    const data = {\r\n      sfen: 'sfen 1ns2gsnl/lkg2r1b1/pppppp1pp/6p2/9/2PP5/PP2PPPPP/1B1RG1S2/LNS2GKNL b - 15',\r\n      move: '6f6e'\r\n    }\r\n    requestMovedSfen(data)\r\n    const sfen = 'sfen 1ns2gsnl/lkg2r1b1/pppppp1pp/6p2/9/2PP5/PP2PPPPP/1B1RG1S2/LNS2GKNL b - 15'\r\n    requestSfenBook(sfen)\r\n    setText('')\r\n  }\r\n  console.log(data.data)\r\n  let book = ''\r\n  return (\r\n    <div>\r\n      <h1>やねうら定跡ビューワー (仮)</h1>\r\n      <input type=\"text\" onChange={(e: any) => setText(e.target.value)} value={text} />\r\n      <div>{text.length}文字です</div>\r\n      <div>{book}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Container extends React.Component<AllProps> {\r\n  public render() {\r\n    const { requestSfenBook: requestSfenBook } = this.props\r\n    const { requestMovedSfen: requestMovedSfen } = this.props\r\n    const props = this.props\r\n    return (\r\n      <Form\r\n        data={props.data}\r\n        loading={props.loading}\r\n        requestSfenBook={requestSfenBook}\r\n        requestMovedSfen={requestMovedSfen}\r\n      />\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = ({ data, loading }: BookState) => ({\r\n  data: data,\r\n  loading: loading\r\n})\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n  return {\r\n    requestSfenBook: (sfen: string) => dispatch(requestSfenBook(sfen)),\r\n    requestMovedSfen: (data: any) => dispatch(requestMovedSfen(data))\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Container)\r\n","import { Reducer } from 'redux'\nimport { BookState, BookActionTypes } from './types'\n\nexport const initialState: BookState = {\n  data: [],\n  loading: false\n}\n\nconst reducer: Reducer<BookState> = (state = initialState, action) => {\n  switch (action.type) {\n    case BookActionTypes.FETCH_REQUEST: {\n      return { ...state }\n    }\n    case BookActionTypes.FETCH_SUCCESS: {\n      return { ...state, data: action.payload }\n    }\n    case BookActionTypes.FETCH_ERROR: {\n      return { ...state, errors: action.payload }\n    }\n    case BookActionTypes.REQUEST_SFEN_BOOK: {\n      return { ...state, loading: true }\n    }\n    case BookActionTypes.SUCCESS_SFEN_BOOK: {\n      return { ...state, loading: false, sfenBook: action.payload }\n    }\n    case BookActionTypes.REQUEST_MOVED_SFEN: {\n      return { ...state, loading: true }\n    }\n    case BookActionTypes.SUCCESS_MOVED_SFEN: {\n      return { ...state, loading: false, movedSfen: action.payload }\n    }\n    default: {\n      return state\n    }\n  }\n}\nexport default reducer\n","export async function callApi(method: string, path: string, data?: any) {\n  const url = 'http://localhost:3000'\n  const res = await fetch(url + path, {\n    method,\n    mode: 'cors',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8'\n    },\n    body: JSON.stringify(data)\n  })\n  return await res.json()\n}\n","import { all, call, fork, put, takeEvery } from 'redux-saga/effects'\nimport { BookActionTypes } from './types'\nimport { successSfenBook, successMovedSfen } from './actions'\nimport { callApi } from './api'\n\nfunction* handleSfenBook(action: any) {\n  const res = yield call(callApi, 'post', '/book', action.payload)\n  console.log('handleSfenBook')\n  console.log(res)\n  yield put(successSfenBook(res))\n}\n\nfunction* handleMovedSfen(action: any) {\n  const res = yield call(callApi, 'post', '/move', action.payload)\n  console.log('handleMovedSfen')\n  console.log(res)\n  yield put(successMovedSfen(res))\n}\n\nfunction* watchSfenBook() {\n  yield takeEvery(BookActionTypes.REQUEST_SFEN_BOOK, handleSfenBook)\n}\n\nfunction* watchMovedSfen() {\n  yield takeEvery(BookActionTypes.REQUEST_MOVED_SFEN, handleMovedSfen)\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchSfenBook), fork(watchMovedSfen)])\n}\n","﻿import * as React from 'react'\r\nimport * as ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { createHashHistory } from 'history'\r\nimport Container from './form'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport reducer from './reducer'\r\nimport rootSaga from './sagas'\r\n\r\n// Saga ミドルウェアを作成する\r\nconst sagaMiddleware = createSagaMiddleware()\r\n// Store にマウントする\r\nconst store = createStore(reducer, applyMiddleware(sagaMiddleware))\r\n// Saga を起動する\r\nsagaMiddleware.run(rootSaga)\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Container />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"]}